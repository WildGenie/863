<UserControl xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  x:Class="MyBaseControls.ConfigTool.UCUserEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:local="clr-namespace:MyBaseControls.ConfigTool"
             xmlns:myclass="clr-namespace:MyClassLibrary;assembly=MyClassLibrary"
             d:DesignHeight="300" d:DesignWidth="350" Background="White" Initialized="UserControl_Initialized" Unloaded="UserControl_Unloaded" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <myclass:VisibilityReverseConverter x:Key="VisibilityReverseConverter"/>
        <local:StringToBoolConverter x:Key="StringToBoolConverter"/>
        <local:TreeViewLineConverter x:Key="LineConverter"/>

        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeViewItem -->
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsExpanded" Value="True"></Setter>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                            <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Green"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <HierarchicalDataTemplate x:Key="TreeTemplate" ItemsSource="{Binding subitems}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding displayName}" />
                <StackPanel Orientation="Horizontal" Visibility="{Binding editVisibleity, Converter={StaticResource VisibilityReverseConverter}}">
                    <TextBlock Text="{Binding displayValue}" Foreground="Blue"/>
                    <Rectangle Width="10" Height="10" Stroke="Black" Fill="{Binding displayColor}" Visibility="{Binding colorVisibility}" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding editVisibleity}">
                    <dxe:TextEdit Text="{Binding value}" MaskType="{Binding textValueMaskType}" Mask="{Binding TextValueMask}" IsEnabled="{Binding isTextValueEnable}" Visibility="{Binding boolVisibility, Converter={StaticResource VisibilityReverseConverter}}"/>
                    <Button x:Name="btnSelColor" Click="btnSelColor_Click" Visibility="{Binding colorVisibility}">
                        <Button.Content>
                            <Rectangle x:Name="rectColor" Width="11" Height="10" Stroke="Black" Fill="{Binding displayColor}" />
                        </Button.Content>
                    </Button>
                    <CheckBox x:Name="chkBool" Margin="10,0,0,0" IsChecked="{Binding value, Converter={StaticResource StringToBoolConverter}}" Visibility="{Binding boolVisibility}" HorizontalAlignment="Center"/>
                </StackPanel>

            </StackPanel>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition/>
            <RowDefinition Height="24"/>
            <RowDefinition Height="24"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
            <ComboBox x:Name="cmbsort1" SelectionChanged="cmbsort1_SelectionChanged" FontSize="11" />
            <ComboBox x:Name="cmbsort2" SelectionChanged="cmbsort2_SelectionChanged"  FontSize="11"/>
            <ComboBox x:Name="cmbsort3" SelectionChanged="cmbsort3_SelectionChanged"  FontSize="11"/>
            <ComboBox x:Name="cmbsort4" FontSize="11"/>
            <Button x:Name="btnRebuildTree" Content="重构树" Click="btnRebuildTree_Click" FontSize="12" Margin="5,0"/>
        </StackPanel>
        <TreeView Name="tree" ItemTemplate="{StaticResource TreeTemplate}" SelectedItemChanged="tree_SelectedItemChanged" Grid.Row="1"/>
        <TextBlock Text="注：每一客户端保存单独的配置文件，若更新将会被替换。" Grid.Row="2"/>
        <Button x:Name="btnApply" Content="应用" Width="80" Click="btnApply_Click"  Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" ToolTip="应用选中配置项参数。"/>
        <Button x:Name="btnSaveXml" Content="保存" Width="80" Click="btnSaveXml_Click"  Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" ToolTip="所有配置输出保存到XML配置文件。"/>

    </Grid>
</UserControl>
