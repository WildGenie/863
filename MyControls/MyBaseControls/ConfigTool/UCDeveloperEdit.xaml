<UserControl xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  x:Class="MyBaseControls.ConfigTool.UCDeveloperEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyBaseControls.ConfigTool"
             mc:Ignorable="d" 
             Background="AliceBlue" Height="400" Width="500"
             d:DesignHeight="400" d:DesignWidth="500" Initialized="UserControl_Initialized" Unloaded="UserControl_Unloaded">
    <UserControl.Resources>
        <local:TreeViewLineConverter x:Key="LineConverter"/>

        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeViewItem -->
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsExpanded" Value="True"></Setter>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                            <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Green"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <HierarchicalDataTemplate x:Key="TreeTemplate" ItemsSource="{Binding subitems}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding displayName}" />
                <TextBlock Text="{Binding displayValue}" Foreground="Blue"/>
                <Rectangle Width="10" Height="10" Stroke="Black" Fill="{Binding displayColor}" Visibility="{Binding colorVisibility}" VerticalAlignment="Center"/>
            </StackPanel>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition/>
            <RowDefinition Height="24"/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
            <ComboBox x:Name="cmbsort1" SelectionChanged="cmbsort1_SelectionChanged" FontSize="11" />
            <ComboBox x:Name="cmbsort2" SelectionChanged="cmbsort2_SelectionChanged"  FontSize="11"/>
            <ComboBox x:Name="cmbsort3" SelectionChanged="cmbsort3_SelectionChanged"  FontSize="11"/>
            <ComboBox x:Name="cmbsort4" FontSize="11"/>
            <Button x:Name="btnRebuildTree" Content="重构树" Click="btnRebuildTree_Click" FontSize="12" Margin="5,0"/>
        </StackPanel>
        <TreeView Name="tree" ItemTemplate="{StaticResource TreeTemplate}" SelectedItemChanged="tree_SelectedItemChanged" Grid.Row="1"/>
        <Grid Grid.Column="1" Margin="0,0,5,0" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="key" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
            <Button x:Name="btnCopyText" Click="btnCopyText_Click" HorizontalAlignment="Right" Content="复制" Grid.Column="1"/>
            
            <TextBlock Text="★对象名称：" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox x:Name="txtObj" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" TextChanged="txt_TextChanged" />
            <TextBlock Text="★属性名称：" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox x:Name="txtProperty" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" TextChanged="txt_TextChanged" />
            <TextBlock Text="★状态（选填）：" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="可以此区分同一对象在不同状态下的不同外观"/>
            <TextBox x:Name="txtStatus" Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" TextChanged="txt_TextChanged" />
            <TextBlock Text="★标志（选填）：" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="可以此区分同一对象在不同场景或应用下的不同外观，如不同的地图背景下"/>
            <TextBox x:Name="txtFlag" Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" TextChanged="txt_TextChanged" />

            <TextBlock Text="值类型：" Grid.Row="6" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="必须选择一项以便校验值是否合法"/>
            <ComboBox x:Name="cmbValueType" Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" SelectionChanged="cmbValueType_SelectionChanged" />

            <TextBlock Text="值：" Grid.Row="7" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1">
                <!--<TextBox x:Name="txtValue" VerticalAlignment="Center" Width="148"/>-->

                <dxe:TextEdit x:Name="txtValue" VerticalAlignment="Center" Width="148" MaskType="RegEx" />
                
                <Grid x:Name="grdInputButton">
                    <Button x:Name="btnSelColor" Click="btnSelColor_Click" Visibility="Visible">
                        <Button.Content>
                            <Rectangle x:Name="rectColor" Width="11" Height="10" Stroke="Black" />
                        </Button.Content>
                    </Button>
                    <CheckBox x:Name="chkBoolValue" VerticalAlignment="Center" Checked="chkBoolValue_Checked" Unchecked="chkBoolValue_Unchecked" />
                </Grid>
            </StackPanel>
            <TextBlock Text="说明：" Grid.Row="8" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox x:Name="txtNote" Grid.Row="8" Grid.Column="1" VerticalAlignment="Center"/>
            <TextBlock Text="用户可编辑：" Grid.Row="9" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <CheckBox x:Name="chkUserEditable" Grid.Row="9" Grid.Column="1" VerticalAlignment="Center"/>

        </Grid>

        <Button x:Name="btnDel" Content="删除" Width="60" Click="btnDel_Click" Grid.Row="2"/>
        <Button x:Name="btnSave" Content="保存到内存" Width="80" Click="btnSave_Click" Grid.Row="2" Grid.Column="1" ToolTip="将编辑结果保存到内存的树结构中。"/>
        <Button x:Name="btnSaveXml" Content="保存到文件" Width="80" Click="btnSaveXml_Click"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" ToolTip="所有配置输出保存到XML配置文件。"/>
        <GroupBox Header="说明" Grid.Row="3" Grid.ColumnSpan="2">
            <StackPanel>
                <TextBlock Text="1.配置项以键值方式组织，对象名称、属性名称、状态、标志共同构成键。"/>
                <TextBlock Text="2.保存时，若无配置项的键则创建新键及其父枝，若有该键，则覆盖内容。"/>
                <TextBlock Text="3.废弃配置项应使用用删除按钮删除，直接修改键字段不能覆盖废弃配置项。"/>
            </StackPanel>
        </GroupBox>
        
    </Grid>
</UserControl>
