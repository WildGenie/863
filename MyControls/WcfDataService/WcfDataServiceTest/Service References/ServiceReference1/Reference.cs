//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfDataServiceTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    [System.SerializableAttribute()]
    public partial class UserType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string createDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastActivityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastLockDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] rolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string alias {
            get {
                return this.aliasField;
            }
            set {
                if ((object.ReferenceEquals(this.aliasField, value) != true)) {
                    this.aliasField = value;
                    this.RaisePropertyChanged("alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string createDate {
            get {
                return this.createDateField;
            }
            set {
                if ((object.ReferenceEquals(this.createDateField, value) != true)) {
                    this.createDateField = value;
                    this.RaisePropertyChanged("createDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isLock {
            get {
                return this.isLockField;
            }
            set {
                if ((this.isLockField.Equals(value) != true)) {
                    this.isLockField = value;
                    this.RaisePropertyChanged("isLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastActivityDate {
            get {
                return this.lastActivityDateField;
            }
            set {
                if ((object.ReferenceEquals(this.lastActivityDateField, value) != true)) {
                    this.lastActivityDateField = value;
                    this.RaisePropertyChanged("lastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastLockDate {
            get {
                return this.lastLockDateField;
            }
            set {
                if ((object.ReferenceEquals(this.lastLockDateField, value) != true)) {
                    this.lastLockDateField = value;
                    this.RaisePropertyChanged("lastLockDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                if ((object.ReferenceEquals(this.lastLoginDateField, value) != true)) {
                    this.lastLoginDateField = value;
                    this.RaisePropertyChanged("lastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] roles {
            get {
                return this.rolesField;
            }
            set {
                if ((object.ReferenceEquals(this.rolesField, value) != true)) {
                    this.rolesField = value;
                    this.RaisePropertyChanged("roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogInfoType", Namespace="http://schemas.datacontract.org/2004/07/WcfDataService")]
    [System.SerializableAttribute()]
    public partial class LogInfoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] configsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string endDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string startDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] typesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] configs {
            get {
                return this.configsField;
            }
            set {
                if ((object.ReferenceEquals(this.configsField, value) != true)) {
                    this.configsField = value;
                    this.RaisePropertyChanged("configs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count {
            get {
                return this.countField;
            }
            set {
                if ((this.countField.Equals(value) != true)) {
                    this.countField = value;
                    this.RaisePropertyChanged("count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                if ((object.ReferenceEquals(this.endDateField, value) != true)) {
                    this.endDateField = value;
                    this.RaisePropertyChanged("endDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                if ((object.ReferenceEquals(this.startDateField, value) != true)) {
                    this.startDateField = value;
                    this.RaisePropertyChanged("startDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] types {
            get {
                return this.typesField;
            }
            set {
                if ((object.ReferenceEquals(this.typesField, value) != true)) {
                    this.typesField = value;
                    this.RaisePropertyChanged("types");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDataService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/test", ReplyAction="http://tempuri.org/IDataService/testResponse")]
        string test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetDataTable", ReplyAction="http://tempuri.org/IDataService/GetDataTableResponse")]
        System.Data.DataTable GetDataTable(string sql, string datasourcename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/ExecuteCommand", ReplyAction="http://tempuri.org/IDataService/ExecuteCommandResponse")]
        bool ExecuteCommand(string sql, string datasourcename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/ReadSelfInfomation", ReplyAction="http://tempuri.org/IDataService/ReadSelfInfomationResponse")]
        WcfDataServiceTest.ServiceReference1.UserType ReadSelfInfomation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateSelfInfomation", ReplyAction="http://tempuri.org/IDataService/UpdateSelfInfomationResponse")]
        bool UpdateSelfInfomation(string Alias, string Password, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetManageData", ReplyAction="http://tempuri.org/IDataService/GetManageDataResponse")]
        System.Data.DataTable GetManageData(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetApplicationID", ReplyAction="http://tempuri.org/IDataService/GetApplicationIDResponse")]
        string GetApplicationID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateUserPassword", ReplyAction="http://tempuri.org/IDataService/UpdateUserPasswordResponse")]
        bool UpdateUserPassword(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddNewUser", ReplyAction="http://tempuri.org/IDataService/AddNewUserResponse")]
        bool AddNewUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/ExecuteManageCommand", ReplyAction="http://tempuri.org/IDataService/ExecuteManageCommandResponse")]
        bool ExecuteManageCommand(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/CheckModelPermissionn", ReplyAction="http://tempuri.org/IDataService/CheckModelPermissionnResponse")]
        bool CheckModelPermissionn(string ModelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/ReadLogInfomation", ReplyAction="http://tempuri.org/IDataService/ReadLogInfomationResponse")]
        WcfDataServiceTest.ServiceReference1.LogInfoType ReadLogInfomation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/ReadLogs", ReplyAction="http://tempuri.org/IDataService/ReadLogsResponse")]
        System.Data.DataTable ReadLogs(System.DateTime start, System.DateTime end, string logtype);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : WcfDataServiceTest.ServiceReference1.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<WcfDataServiceTest.ServiceReference1.IDataService>, WcfDataServiceTest.ServiceReference1.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string test() {
            return base.Channel.test();
        }
        
        public System.Data.DataTable GetDataTable(string sql, string datasourcename) {
            return base.Channel.GetDataTable(sql, datasourcename);
        }
        
        public bool ExecuteCommand(string sql, string datasourcename) {
            return base.Channel.ExecuteCommand(sql, datasourcename);
        }
        
        public WcfDataServiceTest.ServiceReference1.UserType ReadSelfInfomation() {
            return base.Channel.ReadSelfInfomation();
        }
        
        public bool UpdateSelfInfomation(string Alias, string Password, string Email) {
            return base.Channel.UpdateSelfInfomation(Alias, Password, Email);
        }
        
        public System.Data.DataTable GetManageData(string sql) {
            return base.Channel.GetManageData(sql);
        }
        
        public string GetApplicationID() {
            return base.Channel.GetApplicationID();
        }
        
        public bool UpdateUserPassword(string userid, string password) {
            return base.Channel.UpdateUserPassword(userid, password);
        }
        
        public bool AddNewUser(string username, string password) {
            return base.Channel.AddNewUser(username, password);
        }
        
        public bool ExecuteManageCommand(string sql) {
            return base.Channel.ExecuteManageCommand(sql);
        }
        
        public bool CheckModelPermissionn(string ModelName) {
            return base.Channel.CheckModelPermissionn(ModelName);
        }
        
        public WcfDataServiceTest.ServiceReference1.LogInfoType ReadLogInfomation() {
            return base.Channel.ReadLogInfomation();
        }
        
        public System.Data.DataTable ReadLogs(System.DateTime start, System.DateTime end, string logtype) {
            return base.Channel.ReadLogs(start, end, logtype);
        }
    }
}
